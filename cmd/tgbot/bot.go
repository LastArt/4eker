package main

import (
	"4eker/pkg"
	"4eker/set"
	"flag"
	"fmt"
	"log"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

// =================================================================================
// –ö–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º - –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
// =================================================================================
var nmShowVisiters = tgbotapi.NewReplyKeyboard( // –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∂—É—Ä–Ω–∞–ª –ø—Ä–∏—Å—É—Ç—Å–≤—É–±—â–∏—Ö
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("üëÅ –ö—Ç–æ –≤ —Ü–µ—Ö—É"),
	),
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("üìä –û—Ç—á–µ—Ç—ã"),
	),
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("üõ† –ù–∞—Å—Ç—Ä–æ–π–∫–∏"),
	),
)

var nmKeyJournal = tgbotapi.NewReplyKeyboard(
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("üìñ –ñ—É—Ä–Ω–∞–ª –ø–æ—Å–µ—â–µ–Ω–∏–π –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É –∑–∞ –ø–µ—Ä–∏–æ–¥"), // –ó–∞ –ø–µ—Ä–∏–æ–¥
	),
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("üìÜ –ñ—É—Ä–Ω–∞–ª –ø–æ—Å–µ—â–µ–Ω–∏—è –∑–∞ –ø–µ—Ä–∏–æ–¥"), // –ó–∞ –ø–µ—Ä–∏–æ–¥
	),
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("‚Ü©Ô∏è-–ù–∞–∑–∞–¥"),
	),
)
var nmKeySettings = tgbotapi.NewReplyKeyboard(
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("üë∑üèΩ –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏"), //–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –µ—â–µ 3 –∫–Ω–æ–ø–∫–∏ nmKeyEmpl
	),
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("ü¶∏üèª –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã"), //–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –µ—â–µ 3 –∫–Ω–æ–ø–∫–∏ nmKeyAdmin
	),
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("‚Ü©Ô∏è-–ù–∞–∑–∞–¥"),
	),
)

// ============= –í–¢–û–†–û–ô –£–†–û–í–ï–ù–¨ –ö–ù–û–ü–û–ö nmKeySettings=========================
var nmKeyEmpl = tgbotapi.NewReplyKeyboard(
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"),
	),
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"),
	),
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"),
	),
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("üóÇ –°–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤"),
	),
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("‚Ü©Ô∏è-–ù–∞–∑–∞–¥"),
	),
)

var nmKeyAdmin = tgbotapi.NewReplyKeyboard(
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"),
	),
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"),
	),
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"),
	),
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("üóÇ –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤"),
	),
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("‚Ü©Ô∏è-–ù–∞–∑–∞–¥"),
	),
)

// ============== –ò–ù–õ–ê–ô–ù –ö–ù–û–ü–ö–ò ============================
var exitKey = tgbotapi.NewInlineKeyboardMarkup(
	tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("–í—ã—Ö–æ–¥", "exit"),
	),
)

//=============== –ö–û–ù–ï–¶ –ë–õ–û–ö–ê –° –ò–ù–õ–ê–ô–ù –ö–ù–û–ü–ö–ê–ú–ò =============

func main() {
	var token string
	flag.StringVar(&token, "apikey", "---", "–¢–æ–∫–µ–Ω —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞")

	flag.Parse()
	if token == "---" {
		fmt.Println("–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω!")
	}

	bot, _ := tgbotapi.NewBotAPI(token)

	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60

	updates := bot.GetUpdatesChan(u)

	log.Printf("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ '%s' —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω!", bot.Self.UserName)
	log.Printf("ID —á–∞—Ç–∞")
	log.Printf("ChatID%s", updates)

	usr := new(pkg.User)
	supUser := new(pkg.SuperUser)
	jrnl := new(pkg.Journal)
	for update := range updates {
		if update.Message != nil {
			msg := tgbotapi.NewMessage(update.Message.Chat.ID, update.Message.Text)
			msgGenaral := update.Message.Text
			log.Println("LOG -> ", msgGenaral)
			switch update.Message.Text {
			case "/startmenu": // –ì–û–¢–û–í–û!
				keys := tgbotapi.NewMessage(update.Message.Chat.ID, update.Message.Text)
				keys.ReplyMarkup = nmShowVisiters
				bot.Send(keys)
				break
			case "üëÅ –ö—Ç–æ –≤ —Ü–µ—Ö—É": // –ì–û–¢–û–í–û!
				resOut := jrnl.WhoInPlaceForBot()
				msg := tgbotapi.NewMessage(update.Message.Chat.ID, resOut)
				bot.Send(msg)
			case "üìä –û—Ç—á–µ—Ç—ã": // –ì–û–¢–û–í–û!
				keys := tgbotapi.NewMessage(update.Message.Chat.ID, "–í–∫–ª—é—á–∏–ª --->"+update.Message.Text)
				keys.ReplyMarkup = nmKeyJournal
				bot.Send(keys)
			case "üõ† –ù–∞—Å—Ç—Ä–æ–π–∫–∏": // –ì–û–¢–û–í–û!
				var bln bool
				msg.Text = set.BOT_WRNING_ADMIN_INVATION
				bot.Send(msg)
				for upd := range updates {
					msgIn := upd.Message.Text
					if msgIn == "‚Ü©Ô∏è-–ù–∞–∑–∞–¥" {
						break
					} else {
						res := pkg.NumberValuator(msgIn)
						if len(res) == 2 {
							bln = pkg.CheckAdminUser(res[0], res[1])
							if bln != true {
								msg := tgbotapi.NewMessage(update.Message.Chat.ID, set.BOT_ADMIN_ACCESS_BAD)
								bot.Send(msg)
								break
							} else {
								keys := tgbotapi.NewMessage(update.Message.Chat.ID, set.BOT_WARNING_ADMIN_ACCESS)
								keys.ReplyMarkup = nmKeySettings
								bot.Send(keys)
								break
							}
						} else {
							msg.Text = set.BOT_WARNING_ARGUMENTS_NOT_ENOUGH + "2 –∑–Ω–∞—á–µ–Ω–∏—è"
							bot.Send(msg)
						}
					}
				}
			case "üë∑üèΩ –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏": // –ì–û–¢–û–í–û!
				keys := tgbotapi.NewMessage(update.Message.Chat.ID, "–ú–µ–Ω—é --->"+update.Message.Text)
				keys.ReplyMarkup = nmKeyEmpl
				bot.Send(keys)
			case "ü¶∏üèª –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã": // –ì–û–¢–û–í–û!
				keys := tgbotapi.NewMessage(update.Message.Chat.ID, "–ú–µ–Ω—é --->"+update.Message.Text)
				keys.ReplyMarkup = nmKeyAdmin
				bot.Send(keys)
			case "‚Ü©Ô∏è-–ù–∞–∑–∞–¥": // –ì–û–¢–û–í–û!
				keys := tgbotapi.NewMessage(update.Message.Chat.ID, update.Message.Text)
				keys.ReplyMarkup = nmShowVisiters
				bot.Send(keys)
			case "‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞": // –ì–û–¢–û–í–û
				msg.Text = set.BOT_WARNING_ADDUSER_INFO
				bot.Send(msg)
				for upd := range updates {
					msgIn := upd.Message.Text
					if msgIn == "‚Ü©Ô∏è-–ù–∞–∑–∞–¥" {
						break
					} else {
						res := pkg.NumberValuator(msgIn)
						var r string
						if len(res) == 4 {
							r = usr.AddInBot(res[0], res[1], res[2], res[3])
							msg.Text = r
							bot.Send(msg)
							break
						} else {
							msg.Text = set.BOT_WARNING_ARGUMENTS_NOT_ENOUGH + "4 –∑–Ω–∞—á–µ–Ω–∏—è"
							bot.Send(msg)
						}
					}
				}
			case "‚ùå –£–¥–∞–ª–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞": // –ì–û–¢–û–í–û
				msg.Text = set.BOT_WARNING_DELUSER_INFO
				bot.Send(msg)
				for upd := range updates {
					msgIn := upd.Message.Text
					if msgIn == "‚Ü©Ô∏è-–ù–∞–∑–∞–¥" {
						break
					} else {
						res := pkg.NumberValuator(msgIn)
						var r string
						if len(res) == 1 {
							r = usr.DeleteRowInBot(res[0])
							msg.Text = r
							bot.Send(msg)
						} else {
							msg.Text = set.BOT_WARNING_ARGUMENTS_NOT_ENOUGH + "1 –∑–Ω–∞—á–µ–Ω–∏–µ"
							bot.Send(msg)
						}
					}
				}
			case "‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞": // –ì–û–¢–û–í–û
				msg.Text = set.BOT_WARNING_EDITUSER_INFO
				bot.Send(msg)
				preShow := usr.ShowAllInBot()
				msg := tgbotapi.NewMessage(update.Message.Chat.ID, preShow)
				bot.Send(msg)
				for upd := range updates {
					msgIn := upd.Message.Text
					if msgIn == "‚Ü©Ô∏è-–ù–∞–∑–∞–¥" {
						break
					} else {
						res := pkg.NumberValuator(msgIn)
						var r, show string
						if len(res) == 4 {
							r, show = usr.EditFromBot(res[0], res[1], res[2], res[3])
							msg.Text = r + "\n" + show
							bot.Send(msg)
							break
						} else {
							msg.Text = set.BOT_WARNING_ARGUMENTS_NOT_ENOUGH + "4 –∑–Ω–∞—á–µ–Ω–∏–µ"
							bot.Send(msg)
						}
					}
				}
			case "üóÇ –°–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤": // –ì–û–¢–û–í–û
				resOut := usr.ShowAllInBot()
				msg := tgbotapi.NewMessage(update.Message.Chat.ID, resOut)
				bot.Send(msg)
			case "‚ûï –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞": // –ì–û–¢–û–í–û
				msg.Text = set.BOT_WARNING_ADDADMIN_INFO
				bot.Send(msg)
				for upd := range updates {
					msgIn := upd.Message.Text
					if msgIn == "‚Ü©Ô∏è-–ù–∞–∑–∞–¥" {
						break
					} else {
						res := pkg.NumberValuator(msgIn)
						var r string
						if len(res) == 3 {
							r = supUser.AddInBot(res[0], res[1], res[2])
							msg.Text = r
							bot.Send(msg)
						} else {
							msg.Text = set.BOT_WARNING_ARGUMENTS_NOT_ENOUGH + "3 –∑–Ω–∞—á–µ–Ω–∏—è"
							bot.Send(msg)
						}
					}
				}
			case "‚ùå –£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞": // –ì–û–¢–û–í–û
				msg.Text = set.BOT_WARNING_DELADMIN_INFO
				bot.Send(msg)
				for upd := range updates {
					msgIn := upd.Message.Text
					if msgIn == "‚Ü©Ô∏è-–ù–∞–∑–∞–¥" {
						break
					} else {
						res := pkg.NumberValuator(msgIn)
						var r string
						if len(res) == 1 {
							r = supUser.DeleteRowInBot(res[0])
							msg.Text = r
							bot.Send(msg)
						} else {
							msg.Text = set.BOT_WARNING_ARGUMENTS_NOT_ENOUGH + "1 –∑–Ω–∞—á–µ–Ω–∏–µ"
							bot.Send(msg)
						}
					}
				}
			case "‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞": // –ì–û–¢–û–í–û!
				msg.Text = set.BOT_WARNING_EDITADMIN_INFO
				bot.Send(msg)
				preShow := supUser.ShowAllInBot()
				msg := tgbotapi.NewMessage(update.Message.Chat.ID, preShow)
				bot.Send(msg)
				for upd := range updates {
					msgIn := upd.Message.Text
					if msgIn == "‚Ü©Ô∏è-–ù–∞–∑–∞–¥" {
						break
					} else {
						res := pkg.NumberValuator(msgIn)
						var r, show string
						if len(res) == 4 {
							r, show = supUser.EditFromBot(res[0], res[1], res[2], res[3])
							msg.Text = r + "\n" + show
							bot.Send(msg)
							break
						} else {
							msg.Text = set.BOT_WARNING_ARGUMENTS_NOT_ENOUGH + "4 –∑–Ω–∞—á–µ–Ω–∏–µ"
							bot.Send(msg)
						}
					}
				}
			case "üóÇ –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤": //–ì–û–¢–û–í–û
				resOut := supUser.ShowAllInBot()
				msg := tgbotapi.NewMessage(update.Message.Chat.ID, resOut)
				bot.Send(msg)
			case "üìñ –ñ—É—Ä–Ω–∞–ª –ø–æ—Å–µ—â–µ–Ω–∏–π –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É –∑–∞ –ø–µ—Ä–∏–æ–¥": // –ì–û–¢–û–í–û!
				msg.Text = set.BOT_WARNING_EXPORT_USER_FILE_INFO
				bot.Send(msg)
				for upd := range updates {
					msgIn := upd.Message.Text
					if msgIn == "‚Ü©Ô∏è-–ù–∞–∑–∞–¥" {
						break
					} else {
						res := pkg.NumberValuator(msgIn)
						if len(res) == 3 {
							pkg.PresentJournalToEmpl(res[0], res[1], res[2])
							file := tgbotapi.FilePath(set.ExcelFile)
							msg := tgbotapi.NewDocument(update.Message.Chat.ID, file)
							bot.Send(msg)
							break
						} else {
							msg.Text = set.BOT_WARNING_ARGUMENTS_NOT_ENOUGH + "3 –∑–Ω–∞—á–µ–Ω–∏—è"
							bot.Send(msg)
						}
					}
				}
			case "üìÜ –ñ—É—Ä–Ω–∞–ª –ø–æ—Å–µ—â–µ–Ω–∏—è –∑–∞ –ø–µ—Ä–∏–æ–¥": // –ì–û–¢–û–í–û!
				msg.Text = set.BOT_WARNING_EXPORT_FILE_INFO
				bot.Send(msg)
				for upd := range updates {
					msgIn := upd.Message.Text
					if msgIn == "‚Ü©Ô∏è-–ù–∞–∑–∞–¥" {
						break
					} else {
						res := pkg.NumberValuator(msgIn)
						if len(res) == 2 {
							pkg.PresentJournalToDay(res[0], res[1])
							file := tgbotapi.FilePath(set.ExcelFile)
							msg := tgbotapi.NewDocument(update.Message.Chat.ID, file)
							bot.Send(msg)
						} else {
							msg.Text = set.BOT_WARNING_ARGUMENTS_NOT_ENOUGH + "2 –∑–Ω–∞—á–µ–Ω–∏–µ"
							bot.Send(msg)
						}
					}
				}
			}
		} else if update.CallbackQuery != nil {
			callback := tgbotapi.NewCallback(update.CallbackQuery.ID, update.CallbackQuery.Data)
			if _, err := bot.Request(callback); err != nil {
				panic(err)
			}
			// msg := tgbotapi.NewMessage(update.CallbackQuery.Message.Chat.ID, update.CallbackQuery.Data)
			// if _, err := bot.Send(msg); err != nil {
			// 	panic(err)
			// }
			switch callback.Text {
			case "exit":
				msg := tgbotapi.NewMessage(update.CallbackQuery.Message.Chat.ID, update.Message.Text)
				bot.Send(msg)
			}
		}
	}
}
